@page "/photos"
@page "/photos/album/{albumId:int}"
@page "/photos/user/{userId:int}"

<div class="sticky">
    <h3>Photos</h3>
    @if (Data != null ? Data.HasPagination : false)
    {
        <div class="pagination">
            <button onclick=@(() => Data?.FirstPage())>First</button>
            <button onclick=@(() => Data?.DecPage())>Prev</button>
            <span>Page: @Data.Page / @Data.TotalPages</span>
            <button onclick=@(() => Data?.IncPage())>Next</button>
            <button onclick=@(() => Data?.LastPage())>Last</button>
        </div>
    }
    <p class="position-right" @onclick="ScrollToTop">Scroll to top</p>
</div>
@if (Data != null && Data.HasPhotos)
{
    if (Data.Photos.Count > 0)
    {
        <div class="photo-card-holder">
            @foreach (var item in Data.Photos)
            {
                <PhotoBrowser.Components.CardPhoto PhotoData
                =@item PhotoSelected
                ="HandlePhotoSelection" />
            }
        </div>
    } 
    else
    {
        <div>Sorry, no photos for @ForWhat</div>    
    }
}
else
{
    @if (Data?.ResponseStatus == Models.ResponseStatus.Failure)
    {
        <div>There has been error: @Data.ErrorMessage</div>
    }
    else
    {
        <div>loading...</div>
    }
}
